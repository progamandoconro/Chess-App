{"ast":null,"code":"'use strict';\n\nvar _assertThisInitialized = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _defineProperty = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _slicedToArray = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar loader = require('@ionic/core/loader');\n\nvar React = _interopDefault(require('react'));\n\nvar tslib_1 = require('tslib');\n\nvar ReactDom = _interopDefault(require('react-dom'));\n\nvar core = require('@ionic/core');\n\nvar reactRouter = require('react-router');\n\nvar reactRouterDom = require('react-router-dom');\n\nvar ionicons = require('ionicons');\n\nvar icons = require('ionicons/icons');\n\nfunction attachEventProps(node, newProps) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var className = getClassName(node.classList, newProps, oldProps);\n\n  if (className) {\n    node.className = className;\n  }\n\n  Object.keys(newProps).forEach(function (name) {\n    if (name === 'children' || name === 'style' || name === 'ref' || name === 'className') {\n      return;\n    }\n\n    if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n      var eventName = name.substring(2);\n      var eventNameLc = eventName[0].toLowerCase() + eventName.substring(1);\n\n      if (!isCoveredByReact(eventNameLc)) {\n        syncEvent(node, eventNameLc, newProps[name]);\n      }\n    } else {\n      node[name] = newProps[name];\n    }\n  });\n}\n\nfunction getClassName(classList, newProps, oldProps) {\n  // map the classes to Maps for performance\n  var currentClasses = arrayToMap(classList);\n  var incomingPropClasses = arrayToMap(newProps.className ? newProps.className.split(' ') : []);\n  var oldPropClasses = arrayToMap(oldProps.className ? oldProps.className.split(' ') : []);\n  var finalClassNames = []; // loop through each of the current classes on the component\n  // to see if it should be a part of the classNames added\n\n  currentClasses.forEach(function (currentClass) {\n    if (incomingPropClasses.has(currentClass)) {\n      // add it as its already included in classnames coming in from newProps\n      finalClassNames.push(currentClass);\n      incomingPropClasses.delete(currentClass);\n    } else if (!oldPropClasses.has(currentClass)) {\n      // add it as it has NOT been removed by user\n      finalClassNames.push(currentClass);\n    }\n  });\n  incomingPropClasses.forEach(function (s) {\n    return finalClassNames.push(s);\n  });\n  return finalClassNames.join(' ');\n}\n/**\n * Checks if an event is supported in the current execution environment.\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\n\nfunction isCoveredByReact(eventNameSuffix) {\n  var doc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in doc;\n\n  if (!isSupported) {\n    var element = doc.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nfunction syncEvent(node, eventName, newEventHandler) {\n  var eventStore = node.__events || (node.__events = {});\n  var oldEventHandler = eventStore[eventName]; // Remove old listener so they don't double up.\n\n  if (oldEventHandler) {\n    node.removeEventListener(eventName, oldEventHandler);\n  } // Bind new listener.\n\n\n  node.addEventListener(eventName, eventStore[eventName] = function handler(e) {\n    newEventHandler.call(this, e);\n  });\n}\n\nfunction arrayToMap(arr) {\n  var map = new Map();\n  arr.forEach(function (s) {\n    return map.set(s, s);\n  });\n  return map;\n}\n\nvar IonicContext =\n/*@__PURE__*/\nReact.createContext({\n  getConfig: function getConfig() {},\n  setConfig: function setConfig() {},\n  platform: undefined\n});\n\nvar useIonicConfig = function useIonicConfig() {\n  var value = React.useContext(IonicContext);\n  var config = value.getConfig() || {};\n  var hook = [config, value.setConfig];\n  return hook;\n};\n\nvar dashToPascalCase = function dashToPascalCase(str) {\n  return str.toLowerCase().split('-').map(function (segment) {\n    return segment.charAt(0).toUpperCase() + segment.slice(1);\n  }).join('');\n};\n\nfunction generateUniqueId() {\n  return ([1e7].toString() + -1e3.toString() + -4e3.toString() + -8e3.toString() + -1e11.toString()).replace(/[018]/g, function (c) {\n    var random = crypto.getRandomValues(new Uint8Array(1));\n    return (c ^ random[0] & 15 >> c / 4).toString(16);\n  });\n}\n\nfunction createReactComponent(tagName) {\n  var attributeValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var displayName = dashToPascalCase(tagName);\n\n  var ReactComponent =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(ReactComponent, _React$Component);\n\n    function ReactComponent(props) {\n      _classCallCheck(this, ReactComponent);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ReactComponent).call(this, props));\n    }\n\n    _createClass(ReactComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.componentWillReceiveProps(this.props);\n      }\n    }, {\n      key: \"componentWillReceiveProps\",\n      value: function componentWillReceiveProps(props) {\n        var node = ReactDom.findDOMNode(this);\n        attachEventProps(node, props, this.props);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _a = this.props,\n            children = _a.children,\n            forwardedRef = _a.forwardedRef,\n            cProps = tslib_1.__rest(_a, [\"children\", \"forwardedRef\"]);\n\n        var propsWithoutAttributeValues = Object.keys(cProps).reduce(function (oldValue, key) {\n          if (attributeValues.indexOf(key) === -1) {\n            oldValue[key] = cProps[key];\n          }\n\n          return oldValue;\n        }, {});\n        return React.createElement(tagName, Object.assign({}, propsWithoutAttributeValues, {\n          ref: forwardedRef\n        }), children);\n      }\n    }], [{\n      key: \"displayName\",\n      get: function get() {\n        return displayName;\n      }\n    }]);\n\n    return ReactComponent;\n  }(React.Component);\n\n  function forwardRef(props, ref) {\n    return React.createElement(ReactComponent, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n  }\n\n  forwardRef.displayName = displayName;\n  return React.forwardRef(forwardRef);\n} // ionicons\n\n\nvar IonIcon =\n/*@__PURE__*/\ncreateReactComponent('ion-icon', ['icon']); // /*@__PURE__*/createReactComponent\n\nvar IonTabBarInner =\n/*@__PURE__*/\ncreateReactComponent('ion-tab-bar');\nvar IonRouterOutletInner =\n/*@__PURE__*/\ncreateReactComponent('ion-router-outlet');\nvar IonBackButtonInner =\n/*@__PURE__*/\ncreateReactComponent('ion-back-button');\nvar IonTab =\n/*@__PURE__*/\ncreateReactComponent('ion-tab');\nvar IonTabButton =\n/*@__PURE__*/\ncreateReactComponent('ion-tab-button');\nvar IonAnchor =\n/*@__PURE__*/\ncreateReactComponent('ion-anchor');\nvar IonAppInner =\n/*@__PURE__*/\ncreateReactComponent('ion-app');\nvar IonAvatar =\n/*@__PURE__*/\ncreateReactComponent('ion-avatar');\nvar IonBackdrop =\n/*@__PURE__*/\ncreateReactComponent('ion-backdrop');\nvar IonBadge =\n/*@__PURE__*/\ncreateReactComponent('ion-badge');\nvar IonButton =\n/*@__PURE__*/\ncreateReactComponent('ion-button');\nvar IonButtons =\n/*@__PURE__*/\ncreateReactComponent('ion-buttons');\nvar IonCard =\n/*@__PURE__*/\ncreateReactComponent('ion-card');\nvar IonCardContent =\n/*@__PURE__*/\ncreateReactComponent('ion-card-content');\nvar IonCardHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-card-header');\nvar IonCardSubtitle =\n/*@__PURE__*/\ncreateReactComponent('ion-card-subtitle');\nvar IonCardTitle =\n/*@__PURE__*/\ncreateReactComponent('ion-card-title');\nvar IonCheckbox =\n/*@__PURE__*/\ncreateReactComponent('ion-checkbox');\nvar IonCol =\n/*@__PURE__*/\ncreateReactComponent('ion-col');\nvar IonContent =\n/*@__PURE__*/\ncreateReactComponent('ion-content');\nvar IonChip =\n/*@__PURE__*/\ncreateReactComponent('ion-chip');\nvar IonDatetime =\n/*@__PURE__*/\ncreateReactComponent('ion-datetime');\nvar IonFab =\n/*@__PURE__*/\ncreateReactComponent('ion-fab');\nvar IonFabButton =\n/*@__PURE__*/\ncreateReactComponent('ion-fab-button');\nvar IonFabList =\n/*@__PURE__*/\ncreateReactComponent('ion-fab-list');\nvar IonFooter =\n/*@__PURE__*/\ncreateReactComponent('ion-footer');\nvar IonGrid =\n/*@__PURE__*/\ncreateReactComponent('ion-grid');\nvar IonHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-header');\nvar IonImg =\n/*@__PURE__*/\ncreateReactComponent('ion-img');\nvar IonInfiniteScroll =\n/*@__PURE__*/\ncreateReactComponent('ion-infinite-scroll');\nvar IonInput =\n/*@__PURE__*/\ncreateReactComponent('ion-input');\nvar IonItem =\n/*@__PURE__*/\ncreateReactComponent('ion-item');\nvar IonItemDivider =\n/*@__PURE__*/\ncreateReactComponent('ion-item-divider');\nvar IonItemGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-item-group');\nvar IonItemOption =\n/*@__PURE__*/\ncreateReactComponent('ion-item-option');\nvar IonItemOptions =\n/*@__PURE__*/\ncreateReactComponent('ion-item-options');\nvar IonItemSliding =\n/*@__PURE__*/\ncreateReactComponent('ion-item-sliding');\nvar IonLabel =\n/*@__PURE__*/\ncreateReactComponent('ion-label');\nvar IonList =\n/*@__PURE__*/\ncreateReactComponent('ion-list');\nvar IonListHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-list-header');\nvar IonMenu =\n/*@__PURE__*/\ncreateReactComponent('ion-menu');\nvar IonMenuButton =\n/*@__PURE__*/\ncreateReactComponent('ion-menu-button');\nvar IonMenuToggle =\n/*@__PURE__*/\ncreateReactComponent('ion-menu-toggle');\nvar IonNote =\n/*@__PURE__*/\ncreateReactComponent('ion-note');\nvar IonPicker =\n/*@__PURE__*/\ncreateReactComponent('ion-picker');\nvar IonPickerColumn =\n/*@__PURE__*/\ncreateReactComponent('ion-picker-column');\nvar IonNav =\n/*@__PURE__*/\ncreateReactComponent('ion-nav');\nvar IonProgressBar =\n/*@__PURE__*/\ncreateReactComponent('ion-progress-bar');\nvar IonRadio =\n/*@__PURE__*/\ncreateReactComponent('ion-radio');\nvar IonRadioGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-radio-group');\nvar IonRange =\n/*@__PURE__*/\ncreateReactComponent('ion-range');\nvar IonRefresher =\n/*@__PURE__*/\ncreateReactComponent('ion-refresher');\nvar IonRefresherContent =\n/*@__PURE__*/\ncreateReactComponent('ion-refresher-content');\nvar IonReorder =\n/*@__PURE__*/\ncreateReactComponent('ion-reorder');\nvar IonReorderGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-reorder-group');\nvar IonRippleEffect =\n/*@__PURE__*/\ncreateReactComponent('ion-ripple-effect');\nvar IonRow =\n/*@__PURE__*/\ncreateReactComponent('ion-row');\nvar IonSearchbar =\n/*@__PURE__*/\ncreateReactComponent('ion-searchbar');\nvar IonSegment =\n/*@__PURE__*/\ncreateReactComponent('ion-segment');\nvar IonSegmentButton =\n/*@__PURE__*/\ncreateReactComponent('ion-segment-button');\nvar IonSelect =\n/*@__PURE__*/\ncreateReactComponent('ion-select');\nvar IonSelectOption =\n/*@__PURE__*/\ncreateReactComponent('ion-select-option');\nvar IonSelectPopover =\n/*@__PURE__*/\ncreateReactComponent('ion-select-popover');\nvar IonSkeletonText =\n/*@__PURE__*/\ncreateReactComponent('ion-skeleton-text');\nvar IonSlide =\n/*@__PURE__*/\ncreateReactComponent('ion-slide');\nvar IonSlides =\n/*@__PURE__*/\ncreateReactComponent('ion-slides');\nvar IonSpinner =\n/*@__PURE__*/\ncreateReactComponent('ion-spinner');\nvar IonSplitPane =\n/*@__PURE__*/\ncreateReactComponent('ion-split-pane');\nvar IonText =\n/*@__PURE__*/\ncreateReactComponent('ion-text');\nvar IonTextarea =\n/*@__PURE__*/\ncreateReactComponent('ion-textarea');\nvar IonThumbnail =\n/*@__PURE__*/\ncreateReactComponent('ion-thumbnail');\nvar IonTitle =\n/*@__PURE__*/\ncreateReactComponent('ion-title');\nvar IonToggle =\n/*@__PURE__*/\ncreateReactComponent('ion-toggle');\nvar IonToolbar =\n/*@__PURE__*/\ncreateReactComponent('ion-toolbar');\nvar IonVirtualScroll =\n/*@__PURE__*/\ncreateReactComponent('ion-virtual-scroll');\n\nvar Platform =\n/*#__PURE__*/\nfunction () {\n  function Platform() {\n    _classCallCheck(this, Platform);\n  }\n  /**\n   * @returns returns true/false based on platform.\n   * @description\n   * Depending on the platform the user is on, `is(platformName)` will\n   * return `true` or `false`. Note that the same app can return `true`\n   * for more than one platform name. For example, an app running from\n   * an iPad would return `true` for the platform names: `mobile`,\n   * `ios`, `ipad`, and `tablet`. Additionally, if the app was running\n   * from Cordova then `cordova` would be true, and if it was running\n   * from a web browser on the iPad then `mobileweb` would be `true`.\n   *\n   * ```\n   * import { Platform } from 'ionic-angular';\n   *\n   * @Component({...})\n   * export MyPage {\n   *   constructor(public platform: Platform) {\n   *     if (this.platform.is('ios')) {\n   *       // This will only print when on iOS\n   *       console.log('I am an iOS device!');\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * | Platform Name   | Description                        |\n   * |-----------------|------------------------------------|\n   * | android         | on a device running Android.       |\n   * | cordova         | on a device running Cordova.       |\n   * | ios             | on a device running iOS.           |\n   * | ipad            | on an iPad device.                 |\n   * | iphone          | on an iPhone device.               |\n   * | phablet         | on a phablet device.               |\n   * | tablet          | on a tablet device.                |\n   * | electron        | in Electron on a desktop device.   |\n   * | pwa             | as a PWA app.                      |\n   * | mobile          | on a mobile device.                |\n   * | mobileweb       | on a mobile device in a browser.   |\n   * | desktop         | on a desktop device.               |\n   * | hybrid          | is a cordova or capacitor app.     |\n   *\n   */\n\n\n  _createClass(Platform, [{\n    key: \"is\",\n    value: function is(platformName) {\n      return core.isPlatform(window, platformName);\n    }\n    /**\n     * @returns the array of platforms\n     * @description\n     * Depending on what device you are on, `platforms` can return multiple values.\n     * Each possible value is a hierarchy of platforms. For example, on an iPhone,\n     * it would return `mobile`, `ios`, and `iphone`.\n     *\n     * ```\n     * import { Platform } from 'ionic-angular';\n     *\n     * @Component({...})\n     * export MyPage {\n     *   constructor(public platform: Platform) {\n     *     // This will print an array of the current platforms\n     *     console.log(this.platform.platforms());\n     *   }\n     * }\n     * ```\n     */\n\n  }, {\n    key: \"platforms\",\n    value: function platforms() {\n      return core.getPlatforms(window);\n    }\n    /**\n    * Returns if this app is using right-to-left language direction or not.\n    * We recommend the app's `index.html` file already has the correct `dir`\n    * attribute value set, such as `<html dir=\"ltr\">` or `<html dir=\"rtl\">`.\n    * [W3C: Structural markup and right-to-left text in HTML](http://www.w3.org/International/questions/qa-html-dir)\n    */\n\n  }, {\n    key: \"getQueryParam\",\n\n    /**\n    * Get the query string parameter\n    */\n    value: function getQueryParam(key) {\n      return readQueryParam(window.location.href, key);\n    }\n    /**\n     * Returns `true` if the app is in landscape mode.\n     */\n\n  }, {\n    key: \"isLandscape\",\n    value: function isLandscape() {\n      return !this.isPortrait();\n    }\n    /**\n    * Returns `true` if the app is in portait mode.\n    */\n\n  }, {\n    key: \"isPortrait\",\n    value: function isPortrait() {\n      return window.matchMedia && window.matchMedia('(orientation: portrait)').matches;\n    }\n  }, {\n    key: \"testUserAgent\",\n    value: function testUserAgent(expression) {\n      var nav = window.navigator;\n      return !!(nav && nav.userAgent && nav.userAgent.indexOf(expression) >= 0);\n    }\n    /**\n    * Get the current url.\n    */\n\n  }, {\n    key: \"url\",\n    value: function url() {\n      return window.location.href;\n    }\n    /**\n     * Gets the width of the platform's viewport using `window.innerWidth`.\n     */\n\n  }, {\n    key: \"width\",\n    value: function width() {\n      return window.innerWidth;\n    }\n    /**\n     * Gets the height of the platform's viewport using `window.innerHeight`.\n     */\n\n  }, {\n    key: \"height\",\n    value: function height() {\n      return window.innerHeight;\n    }\n  }, {\n    key: \"isRTL\",\n    get: function get() {\n      return document.dir === 'rtl';\n    }\n  }]);\n\n  return Platform;\n}();\n\nvar readQueryParam = function readQueryParam(url, key) {\n  key = key.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  var regex = new RegExp('[\\\\?&]' + key + '=([^&#]*)');\n  var results = regex.exec(url);\n  return results ? decodeURIComponent(results[1].replace(/\\+/g, ' ')) : null;\n};\n\nfunction getConfig() {\n  var coreConfig = getCoreConfig();\n  var config = Array.from(coreConfig.m).reduce(function (obj, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    obj[key] = value;\n    return obj;\n  }, {});\n  return config;\n}\n\nfunction setConfig(config) {\n  var coreConfig = getCoreConfig();\n  coreConfig.reset(config);\n}\n\nfunction getCoreConfig() {\n  if (typeof window !== 'undefined') {\n    var Ionic = window.Ionic;\n\n    if (Ionic && Ionic.config) {\n      return window.Ionic.config;\n    }\n  }\n\n  return null;\n}\n\nvar IonApp =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(IonApp, _React$Component2);\n\n  function IonApp(props) {\n    var _this;\n\n    _classCallCheck(this, IonApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IonApp).call(this, props));\n    var ionicPlatform = new Platform();\n    _this.state = {\n      getConfig: getConfig,\n      setConfig: setConfig,\n      platform: ionicPlatform\n    };\n    return _this;\n  }\n\n  _createClass(IonApp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(IonicContext.Provider, {\n        value: this.state\n      }, React.createElement(IonAppInner, null, this.props.children));\n    }\n  }]);\n\n  return IonApp;\n}(React.Component);\n\nfunction createControllerComponent(displayName, controller) {\n  var dismissEventName = \"on\".concat(displayName, \"DidDismiss\");\n  return (\n    /*#__PURE__*/\n    function (_React$Component3) {\n      _inherits(ReactControllerComponent, _React$Component3);\n\n      function ReactControllerComponent(props) {\n        var _this2;\n\n        _classCallCheck(this, ReactControllerComponent);\n\n        _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ReactControllerComponent).call(this, props));\n        _this2.id = generateUniqueId();\n        return _this2;\n      }\n\n      _createClass(ReactControllerComponent, [{\n        key: \"componentDidMount\",\n        value: function () {\n          var _componentDidMount = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var isOpen;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    isOpen = this.props.isOpen;\n\n                    if (isOpen) {\n                      this.present();\n                    }\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function componentDidMount() {\n            return _componentDidMount.apply(this, arguments);\n          }\n\n          return componentDidMount;\n        }()\n      }, {\n        key: \"componentDidUpdate\",\n        value: function () {\n          var _componentDidUpdate = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(prevProps) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n                      this.present(prevProps);\n                    }\n\n                    if (!(this.controller && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false)) {\n                      _context2.next = 4;\n                      break;\n                    }\n\n                    _context2.next = 4;\n                    return this.controller.dismiss();\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          function componentDidUpdate(_x) {\n            return _componentDidUpdate.apply(this, arguments);\n          }\n\n          return componentDidUpdate;\n        }()\n      }, {\n        key: \"present\",\n        value: function () {\n          var _present = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3(prevProps) {\n            var _a, isOpen, onDidDismiss, cProps, elementProps;\n\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _a = this.props, isOpen = _a.isOpen, onDidDismiss = _a.onDidDismiss, cProps = tslib_1.__rest(_a, [\"isOpen\", \"onDidDismiss\"]);\n                    elementProps = Object.assign({}, cProps, _defineProperty({}, dismissEventName, onDidDismiss));\n                    _context3.next = 4;\n                    return controller.create(Object.assign({}, elementProps));\n\n                  case 4:\n                    this.controller = _context3.sent;\n                    attachEventProps(this.controller, elementProps, prevProps);\n                    this.controller.present();\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          function present(_x2) {\n            return _present.apply(this, arguments);\n          }\n\n          return present;\n        }()\n      }, {\n        key: \"render\",\n        value: function render() {\n          return null;\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return displayName;\n        }\n      }]);\n\n      return ReactControllerComponent;\n    }(React.Component)\n  );\n}\n\nvar IonAlert =\n/*@__PURE__*/\ncreateControllerComponent('IonAlert', core.alertController);\nvar IonLoading =\n/*@__PURE__*/\ncreateControllerComponent('IonLoading', core.loadingController);\nvar IonToast =\n/*@__PURE__*/\ncreateControllerComponent('IonToast', core.toastController);\n\nfunction createOverlayComponent(displayName, controller) {\n  var dismissEventName = \"on\".concat(displayName, \"DidDismiss\");\n  return (\n    /*#__PURE__*/\n    function (_React$Component4) {\n      _inherits(ReactOverlayComponent, _React$Component4);\n\n      function ReactOverlayComponent(props) {\n        var _this3;\n\n        _classCallCheck(this, ReactOverlayComponent);\n\n        _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ReactOverlayComponent).call(this, props));\n        _this3.el = document.createElement('div');\n        return _this3;\n      }\n\n      _createClass(ReactOverlayComponent, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (this.props.isOpen) {\n            this.present();\n          }\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function () {\n          var _componentDidUpdate2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4(prevProps) {\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n                      this.present(prevProps);\n                    }\n\n                    if (!(this.controller && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false)) {\n                      _context4.next = 4;\n                      break;\n                    }\n\n                    _context4.next = 4;\n                    return this.controller.dismiss();\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          function componentDidUpdate(_x3) {\n            return _componentDidUpdate2.apply(this, arguments);\n          }\n\n          return componentDidUpdate;\n        }()\n      }, {\n        key: \"present\",\n        value: function () {\n          var _present2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee5(prevProps) {\n            var _a, children, isOpen, _a$onDidDismiss, onDidDismiss, cProps, elementProps;\n\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _a = this.props, children = _a.children, isOpen = _a.isOpen, _a$onDidDismiss = _a.onDidDismiss, onDidDismiss = _a$onDidDismiss === void 0 ? function () {} : _a$onDidDismiss, cProps = tslib_1.__rest(_a, [\"children\", \"isOpen\", \"onDidDismiss\"]);\n                    elementProps = Object.assign({}, cProps, _defineProperty({}, dismissEventName, onDidDismiss));\n                    _context5.next = 4;\n                    return controller.create(Object.assign({}, elementProps, {\n                      component: this.el,\n                      componentProps: {}\n                    }));\n\n                  case 4:\n                    this.controller = _context5.sent;\n                    attachEventProps(this.controller, elementProps, prevProps);\n                    this.controller.present();\n\n                  case 7:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          function present(_x4) {\n            return _present2.apply(this, arguments);\n          }\n\n          return present;\n        }()\n      }, {\n        key: \"render\",\n        value: function render() {\n          return ReactDom.createPortal(this.props.children, this.el);\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return displayName;\n        }\n      }]);\n\n      return ReactOverlayComponent;\n    }(React.Component)\n  );\n}\n\nvar IonActionSheet =\n/*@__PURE__*/\ncreateOverlayComponent('IonActionSheet', core.actionSheetController);\nvar IonModal =\n/*@__PURE__*/\ncreateOverlayComponent('IonModal', core.modalController);\nvar IonPopover =\n/*@__PURE__*/\ncreateOverlayComponent('IonPopover', core.popoverController);\n\nvar IonPageInternal = function IonPageInternal(_a) {\n  var children = _a.children,\n      forwardedRef = _a.forwardedRef,\n      className = _a.className,\n      props = tslib_1.__rest(_a, [\"children\", \"forwardedRef\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: className ? \"ion-page \".concat(className) : 'ion-page',\n    ref: forwardedRef\n  }, props), children);\n};\n\nfunction forwardRef(props, ref) {\n  return React.createElement(IonPageInternal, Object.assign({}, props, {\n    forwardedRef: ref\n  }));\n}\n\nforwardRef.displayName = 'IonPage';\nvar IonPage =\n/*@__PURE__*/\nReact.forwardRef(forwardRef);\n\nvar TabBar =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(TabBar, _React$Component5);\n\n  function TabBar(props) {\n    var _this4;\n\n    _classCallCheck(this, TabBar);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(TabBar).call(this, props));\n\n    _this4.onTabButtonClick = function (e) {\n      var targetUrl = _this4.state.activeTab === e.detail.tab ? _this4.state.tabs[e.detail.tab].originalHref : _this4.state.tabs[e.detail.tab].currentHref;\n\n      _this4.props.history.push(targetUrl);\n    };\n\n    _this4.renderChild = function (activeTab) {\n      return function (child) {\n        if (child != null && typeof child === 'object' && child.props && child.type === IonTabButton) {\n          var href = child.props.tab === activeTab ? _this4.props.location.pathname : _this4.state.tabs[child.props.tab].currentHref;\n          return React.cloneElement(child, {\n            href: href,\n            onIonTabButtonClick: _this4.onTabButtonClick\n          });\n        }\n\n        return null;\n      };\n    };\n\n    var tabActiveUrls = {};\n    React.Children.forEach(_this4.props.children, function (child) {\n      if (child != null && typeof child === 'object' && child.props && child.type === IonTabButton) {\n        tabActiveUrls[child.props.tab] = {\n          originalHref: child.props.href,\n          currentHref: child.props.href\n        };\n      }\n    });\n    _this4.state = {\n      activeTab: null,\n      tabs: tabActiveUrls\n    };\n    return _this4;\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(IonTabBarInner, Object.assign({}, this.props, {\n        selectedTab: this.state.activeTab\n      }), React.Children.map(this.props.children, this.renderChild(this.state.activeTab)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var activeTab = Object.keys(state.tabs).find(function (key) {\n        var href = state.tabs[key].originalHref;\n        return props.location.pathname.startsWith(href);\n      });\n\n      if (!activeTab || activeTab === state.activeTab && state.tabs[activeTab].currentHref === props.location.pathname) {\n        return null;\n      }\n\n      return {\n        activeTab: activeTab,\n        tabs: Object.assign({}, state.tabs, _defineProperty({}, activeTab, {\n          originalHref: state.tabs[activeTab].originalHref,\n          currentHref: props.location.pathname\n        }))\n      };\n    }\n  }]);\n\n  return TabBar;\n}(React.Component);\n\nvar IonTabBar =\n/*@__PURE__*/\nreactRouter.withRouter(TabBar);\n\nfunction generateUniqueId$1() {\n  return ([1e7].toString() + -1e3.toString() + -4e3.toString() + -8e3.toString() + -1e11.toString()).replace(/[018]/g, function (c) {\n    var random = crypto.getRandomValues(new Uint8Array(1));\n    return (c ^ random[0] & 15 >> c / 4).toString(16);\n  });\n}\n\nvar IonLifeCycleContext = React.createContext({\n  onIonViewWillEnter: function onIonViewWillEnter() {},\n  ionViewWillEnter: function ionViewWillEnter() {},\n  onIonViewDidEnter: function onIonViewDidEnter() {},\n  ionViewDidEnter: function ionViewDidEnter() {},\n  onIonViewWillLeave: function onIonViewWillLeave() {},\n  ionViewWillLeave: function ionViewWillLeave() {},\n  onIonViewDidLeave: function onIonViewDidLeave() {},\n  ionViewDidLeave: function ionViewDidLeave() {}\n});\n\nvar DefaultIonLifeCycleContext =\n/*#__PURE__*/\nfunction () {\n  function DefaultIonLifeCycleContext() {\n    _classCallCheck(this, DefaultIonLifeCycleContext);\n  }\n\n  _createClass(DefaultIonLifeCycleContext, [{\n    key: \"onIonViewWillEnter\",\n    value: function onIonViewWillEnter(callback) {\n      this.ionViewWillEnterCallback = callback;\n    }\n  }, {\n    key: \"ionViewWillEnter\",\n    value: function ionViewWillEnter() {\n      if (this.ionViewWillEnterCallback) {\n        this.ionViewWillEnterCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewDidEnter\",\n    value: function onIonViewDidEnter(callback) {\n      this.ionViewDidEnterCallback = callback;\n    }\n  }, {\n    key: \"ionViewDidEnter\",\n    value: function ionViewDidEnter() {\n      if (this.ionViewDidEnterCallback) {\n        this.ionViewDidEnterCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewWillLeave\",\n    value: function onIonViewWillLeave(callback) {\n      this.ionViewWillLeaveCallback = callback;\n    }\n  }, {\n    key: \"ionViewWillLeave\",\n    value: function ionViewWillLeave() {\n      if (this.ionViewWillLeaveCallback) {\n        this.ionViewWillLeaveCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewDidLeave\",\n    value: function onIonViewDidLeave(callback) {\n      this.ionViewDidLeaveCallback = callback;\n    }\n  }, {\n    key: \"ionViewDidLeave\",\n    value: function ionViewDidLeave() {\n      if (this.ionViewDidLeaveCallback) {\n        this.ionViewDidLeaveCallback();\n      }\n\n      this.componentCanBeDestroyed();\n    }\n  }, {\n    key: \"onComponentCanBeDestroyed\",\n    value: function onComponentCanBeDestroyed(callback) {\n      this.componentCanBeDestroyedCallback = callback;\n    }\n  }, {\n    key: \"componentCanBeDestroyed\",\n    value: function componentCanBeDestroyed() {\n      if (this.componentCanBeDestroyedCallback) {\n        this.componentCanBeDestroyedCallback();\n      }\n    }\n  }]);\n\n  return DefaultIonLifeCycleContext;\n}();\n\nvar ViewInternal =\n/*#__PURE__*/\nfunction (_React$Component6) {\n  _inherits(ViewInternal, _React$Component6);\n\n  function ViewInternal(props) {\n    var _this5;\n\n    _classCallCheck(this, ViewInternal);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ViewInternal).call(this, props));\n    _this5.state = {\n      ref: null\n    };\n    return _this5;\n  }\n\n  _createClass(ViewInternal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var forwardedRef = this.props.forwardedRef;\n      this.setState({\n        ref: forwardedRef\n      });\n\n      if (forwardedRef && forwardedRef.current) {\n        forwardedRef.current.addEventListener('ionViewWillEnter', this.ionViewWillEnterHandler.bind(this));\n        forwardedRef.current.addEventListener('ionViewDidEnter', this.ionViewDidEnterHandler.bind(this));\n        forwardedRef.current.addEventListener('ionViewWillLeave', this.ionViewWillLeaveHandler.bind(this));\n        forwardedRef.current.addEventListener('ionViewDidLeave', this.ionViewDidLeaveHandler.bind(this));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var forwardedRef = this.props.forwardedRef;\n\n      if (forwardedRef && forwardedRef.current) {\n        forwardedRef.current.removeEventListener('ionViewWillEnter', this.ionViewWillEnterHandler.bind(this));\n        forwardedRef.current.removeEventListener('ionViewDidEnter', this.ionViewDidEnterHandler.bind(this));\n        forwardedRef.current.removeEventListener('ionViewWillLeave', this.ionViewWillLeaveHandler.bind(this));\n        forwardedRef.current.removeEventListener('ionViewDidLeave', this.ionViewDidLeaveHandler.bind(this));\n      }\n    }\n  }, {\n    key: \"ionViewWillEnterHandler\",\n    value: function ionViewWillEnterHandler() {\n      this.context.ionViewWillEnter();\n    }\n  }, {\n    key: \"ionViewDidEnterHandler\",\n    value: function ionViewDidEnterHandler() {\n      this.context.ionViewDidEnter();\n    }\n  }, {\n    key: \"ionViewWillLeaveHandler\",\n    value: function ionViewWillLeaveHandler() {\n      this.context.ionViewWillLeave();\n    }\n  }, {\n    key: \"ionViewDidLeaveHandler\",\n    value: function ionViewDidLeaveHandler() {\n      this.context.ionViewDidLeave();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          forwardedRef = _a.forwardedRef,\n          rest = tslib_1.__rest(_a, [\"className\", \"children\", \"forwardedRef\"]);\n\n      var ref = this.state.ref;\n      return React.createElement(\"div\", Object.assign({\n        className: className ? \"ion-page \".concat(className) : 'ion-page',\n        ref: forwardedRef\n      }, rest), ref && children);\n    }\n  }]);\n\n  return ViewInternal;\n}(React.Component);\n\nViewInternal.contextType = IonLifeCycleContext;\n\nfunction forwardRef$1(props, ref) {\n  return React.createElement(ViewInternal, Object.assign({\n    forwardedRef: ref\n  }, props));\n}\n\nforwardRef$1.displayName = 'View';\nvar View =\n/*@__PURE__*/\nReact.forwardRef(forwardRef$1);\nvar NavContext =\n/*@__PURE__*/\nReact.createContext({\n  viewStacks: {},\n  hideView: function hideView() {\n    navContextNotFoundError();\n  },\n  goBack: function goBack() {\n    navContextNotFoundError();\n  },\n  setupIonRouter: function setupIonRouter() {\n    navContextNotFoundError();\n  },\n  removeViewStack: function removeViewStack() {\n    navContextNotFoundError();\n  },\n  renderChild: function renderChild() {\n    navContextNotFoundError();\n  },\n  transitionView: function transitionView() {\n    navContextNotFoundError();\n  }\n});\n\nfunction navContextNotFoundError() {\n  console.error('IonRouter not found, did you add it to the app?');\n}\n\nvar withIonLifeCycle = function withIonLifeCycle(WrappedComponent) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component7) {\n      _inherits(IonLifeCycle, _React$Component7);\n\n      function IonLifeCycle(props) {\n        var _this6;\n\n        _classCallCheck(this, IonLifeCycle);\n\n        _this6 = _possibleConstructorReturn(this, _getPrototypeOf(IonLifeCycle).call(this, props));\n        _this6.componentRef = React.createRef();\n        return _this6;\n      }\n\n      _createClass(IonLifeCycle, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this7 = this;\n\n          this.context.onIonViewWillEnter(function () {\n            if (_this7.componentRef.current.ionViewWillEnter) {\n              _this7.componentRef.current.ionViewWillEnter();\n            }\n          });\n          this.context.onIonViewDidEnter(function () {\n            if (_this7.componentRef.current.ionViewDidEnter) {\n              _this7.componentRef.current.ionViewDidEnter();\n            }\n          });\n          this.context.onIonViewWillLeave(function () {\n            if (_this7.componentRef.current.ionViewWillLeave) {\n              _this7.componentRef.current.ionViewWillLeave();\n            }\n          });\n          this.context.onIonViewDidLeave(function () {\n            if (_this7.componentRef.current.ionViewDidLeave) {\n              _this7.componentRef.current.ionViewDidLeave();\n            }\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this8 = this;\n\n          return React.createElement(IonLifeCycleContext.Consumer, null, function (context) {\n            _this8.context = context;\n            return React.createElement(WrappedComponent, Object.assign({\n              ref: _this8.componentRef\n            }, _this8.props));\n          });\n        }\n      }]);\n\n      return IonLifeCycle;\n    }(React.Component)\n  );\n};\n\nvar useIonViewWillEnter = function useIonViewWillEnter(callback) {\n  var value = React.useContext(IonLifeCycleContext);\n  value.onIonViewWillEnter(callback);\n};\n\nvar useIonViewDidEnter = function useIonViewDidEnter(callback) {\n  var value = React.useContext(IonLifeCycleContext);\n  value.onIonViewDidEnter(callback);\n};\n\nvar useIonViewWillLeave = function useIonViewWillLeave(callback) {\n  var value = React.useContext(IonLifeCycleContext);\n  value.onIonViewWillLeave(callback);\n};\n\nvar useIonViewDidLeave = function useIonViewDidLeave(callback) {\n  var value = React.useContext(IonLifeCycleContext);\n  value.onIonViewDidLeave(callback);\n};\n\nvar ViewItemManager =\n/*#__PURE__*/\nfunction (_React$Component8) {\n  _inherits(ViewItemManager, _React$Component8);\n\n  function ViewItemManager(props) {\n    var _this9;\n\n    _classCallCheck(this, ViewItemManager);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(ViewItemManager).call(this, props));\n    _this9.ionLifeCycleContext = new DefaultIonLifeCycleContext();\n    _this9._isMounted = false;\n    _this9.state = {\n      show: true\n    };\n\n    _this9.ionLifeCycleContext.onComponentCanBeDestroyed(function () {\n      if (!_this9.props.mount) {\n        if (_this9._isMounted) {\n          _this9.setState({\n            show: false\n          }, function () {\n            _this9.context.hideView(_this9.props.id);\n          });\n        }\n      }\n    });\n\n    return _this9;\n  }\n\n  _createClass(ViewItemManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var show = this.state.show;\n      return React.createElement(IonLifeCycleContext.Provider, {\n        value: this.ionLifeCycleContext\n      }, show && this.props.children);\n    }\n  }]);\n\n  return ViewItemManager;\n}(React.Component); // TODO: treeshake\n\n\nViewItemManager.contextType = NavContext;\n\nvar IonRouterOutlet =\n/*#__PURE__*/\nfunction (_React$Component9) {\n  _inherits(IonRouterOutlet, _React$Component9);\n\n  function IonRouterOutlet(props) {\n    var _this10;\n\n    _classCallCheck(this, IonRouterOutlet);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(IonRouterOutlet).call(this, props));\n    _this10.containerEl = React.createRef();\n    _this10.id = _this10.props.id || generateUniqueId$1();\n    return _this10;\n  }\n\n  _createClass(IonRouterOutlet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.setupIonRouter(this.id, this.props.children, this.containerEl.current);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeViewStack(this.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n\n      return React.createElement(NavContext.Consumer, null, function (context) {\n        _this11.context = context;\n        var viewStack = context.viewStacks[_this11.id];\n        var activeId = viewStack ? viewStack.activeId : '';\n        var views = (viewStack || {\n          views: []\n        }).views.filter(function (x) {\n          return x.show;\n        });\n        return React.createElement(IonRouterOutletInner, {\n          \"data-id\": _this11.id,\n          ref: _this11.containerEl\n        }, views.map(function (item) {\n          var props = {};\n\n          if (item.id === activeId) {\n            props = {\n              'className': ' ion-page-invisible'\n            };\n          }\n\n          return React.createElement(ViewItemManager, {\n            id: item.id,\n            key: item.key,\n            mount: item.mount\n          }, React.createElement(View, Object.assign({\n            ref: item.ref\n          }, props), _this11.context.renderChild(item)));\n        }));\n      });\n    }\n  }]);\n\n  return IonRouterOutlet;\n}(React.Component);\n\nvar hostStyles = {\n  display: 'flex',\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  flexDirection: 'column',\n  width: '100%',\n  height: '100%',\n  contain: 'layout size style'\n};\nvar tabsInner = {\n  position: 'relative',\n  flex: 1,\n  contain: 'layout size style'\n};\n\nvar IonTabs =\n/*#__PURE__*/\nfunction (_React$Component10) {\n  _inherits(IonTabs, _React$Component10);\n\n  function IonTabs() {\n    _classCallCheck(this, IonTabs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IonTabs).apply(this, arguments));\n  }\n\n  _createClass(IonTabs, [{\n    key: \"render\",\n    value: function render() {\n      var outlet;\n      var tabBar;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child == null || typeof child !== 'object' || !child.hasOwnProperty('type')) {\n          return;\n        }\n\n        if (child.type === IonRouterOutlet) {\n          outlet = child;\n        }\n\n        if (child.type === IonTabBar) {\n          tabBar = child;\n        }\n      });\n      return React.createElement(\"div\", {\n        style: hostStyles\n      }, tabBar.props.slot === 'top' ? tabBar : null, React.createElement(\"div\", {\n        style: tabsInner,\n        className: \"tabs-inner\"\n      }, outlet), tabBar.props.slot === 'bottom' ? tabBar : null);\n    }\n  }]);\n\n  return IonTabs;\n}(React.Component);\n\nvar IonBackButton =\n/*#__PURE__*/\nfunction (_React$Component11) {\n  _inherits(IonBackButton, _React$Component11);\n\n  function IonBackButton() {\n    var _this12;\n\n    _classCallCheck(this, IonBackButton);\n\n    _this12 = _possibleConstructorReturn(this, _getPrototypeOf(IonBackButton).apply(this, arguments));\n\n    _this12.clickButton = function (e) {\n      e.stopPropagation();\n\n      _this12.context.goBack(_this12.props.defaultHref);\n    };\n\n    return _this12;\n  }\n\n  _createClass(IonBackButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(IonBackButtonInner, Object.assign({\n        onClick: this.clickButton\n      }, this.props));\n    }\n  }]);\n\n  return IonBackButton;\n}(React.Component);\n\nIonBackButton.contextType = NavContext;\n\nvar IonNavManager =\n/*#__PURE__*/\nfunction (_React$Component12) {\n  _inherits(IonNavManager, _React$Component12);\n\n  function IonNavManager(props) {\n    var _this13;\n\n    _classCallCheck(this, IonNavManager);\n\n    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(IonNavManager).call(this, props));\n\n    _this13.goBack = function (defaultHref) {\n      var _this13$findViewInfoB = _this13.findViewInfoByLocation(_this13.props.location, _this13.state.viewStacks),\n          leavingView = _this13$findViewInfoB.view;\n\n      if (leavingView) {\n        var _this13$findViewInfoB2 = _this13.findViewInfoById(leavingView.prevId, _this13.state.viewStacks),\n            enteringView = _this13$findViewInfoB2.view;\n\n        if (enteringView) {\n          _this13.props.history.replace(enteringView.routeData.match.url, {\n            direction: 'back'\n          });\n        } else {\n          _this13.props.history.replace(defaultHref, {\n            direction: 'back'\n          });\n        }\n      } else {\n        _this13.props.history.replace(defaultHref, {\n          direction: 'back'\n        });\n      }\n    };\n\n    _this13.state = {\n      viewStacks: {},\n      hideView: _this13.hideView.bind(_assertThisInitialized(_this13)),\n      setupIonRouter: _this13.setupIonRouter.bind(_assertThisInitialized(_this13)),\n      removeViewStack: _this13.removeViewStack.bind(_assertThisInitialized(_this13)),\n      renderChild: _this13.renderChild.bind(_assertThisInitialized(_this13)),\n      goBack: _this13.goBack.bind(_assertThisInitialized(_this13)),\n      transitionView: _this13.transitionView.bind(_assertThisInitialized(_this13))\n    };\n    return _this13;\n  }\n\n  _createClass(IonNavManager, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.listenUnregisterCallback = this.props.history.listen(this.historyChange.bind(this));\n    }\n  }, {\n    key: \"hideView\",\n    value: function hideView(viewId) {\n      var viewStacks = Object.assign({}, this.state.viewStacks);\n\n      var _this$findViewInfoByI = this.findViewInfoById(viewId, viewStacks),\n          view = _this$findViewInfoByI.view;\n\n      if (view) {\n        view.show = false;\n        view.key = generateUniqueId();\n        this.setState({\n          viewStacks: viewStacks\n        });\n      }\n    }\n  }, {\n    key: \"historyChange\",\n    value: function historyChange(location, action) {\n      this.setActiveView(location, action);\n    }\n  }, {\n    key: \"findViewInfoByLocation\",\n    value: function findViewInfoByLocation(location, viewStacks) {\n      var view;\n      var match;\n      var viewStack;\n      var keys = Object.keys(viewStacks);\n      keys.some(function (key) {\n        var vs = viewStacks[key];\n        return vs.views.some(function (x) {\n          match = reactRouterDom.matchPath(location.pathname, x.routeData.childProps);\n\n          if (match) {\n            view = x;\n            viewStack = vs;\n            return true;\n          }\n\n          return false;\n        });\n      });\n      var result = {\n        view: view,\n        viewStack: viewStack,\n        match: match\n      };\n      return result;\n    }\n  }, {\n    key: \"findViewInfoById\",\n    value: function findViewInfoById(id, viewStacks) {\n      var view;\n      var viewStack;\n      var keys = Object.keys(viewStacks);\n      keys.some(function (key) {\n        var vs = viewStacks[key];\n        view = vs.views.find(function (x) {\n          return x.id === id;\n        });\n\n        if (view) {\n          viewStack = vs;\n          return true;\n        } else {\n          return false;\n        }\n      });\n      return {\n        view: view,\n        viewStack: viewStack\n      };\n    }\n  }, {\n    key: \"setActiveView\",\n    value: function setActiveView(location, action) {\n      var _this14 = this;\n\n      var viewStacks = Object.assign({}, this.state.viewStacks);\n\n      var _this$findViewInfoByL = this.findViewInfoByLocation(location, viewStacks),\n          enteringView = _this$findViewInfoByL.view,\n          enteringViewStack = _this$findViewInfoByL.viewStack,\n          match = _this$findViewInfoByL.match;\n\n      var direction = location.state && location.state.direction;\n\n      if (!enteringViewStack) {\n        return;\n      }\n\n      var _this$findViewInfoByI2 = this.findViewInfoById(this.activeViewId, viewStacks),\n          leavingView = _this$findViewInfoByI2.view;\n\n      if (leavingView && leavingView.routeData.match.url === location.pathname) {\n        return;\n      }\n\n      if (enteringView) {\n        /**\n         * If the page is being pushed into the stack by another view,\n         * record the view that originally directed to the new view for back button purposes.\n         */\n        if (!enteringView.show && action === 'PUSH') {\n          enteringView.prevId = leavingView && leavingView.id;\n        }\n\n        enteringView.show = true;\n        enteringView.mount = true;\n        enteringView.routeData.match = match;\n        enteringViewStack.activeId = enteringView.id;\n        this.activeViewId = enteringView.id;\n\n        if (leavingView) {\n          this.prevViewId = leavingView.id;\n\n          if (leavingView.routeData.match.params.tab === enteringView.routeData.match.params.tab) {\n            if (action === 'PUSH') {\n              direction = direction || 'forward';\n            } else {\n              direction = direction || 'back';\n              leavingView.mount = false;\n            }\n          }\n          /**\n           * Attempt to determine if the leaving view is a route redirect.\n           * If it is, take it out of the rendering phase.\n           * We assume Routes with render props are redirects, because of this users should not use\n           * the render prop for non redirects, and instead provide a component in its place.\n           */\n\n\n          if (leavingView.element.type === reactRouterDom.Redirect || leavingView.element.props.render) {\n            leavingView.mount = false;\n            leavingView.show = false;\n          }\n        }\n\n        this.setState({\n          viewStacks: viewStacks\n        }, function () {\n          var enteringEl = enteringView.ref && enteringView.ref.current ? enteringView.ref.current : undefined;\n          var leavingEl = leavingView && leavingView.ref && leavingView.ref.current ? leavingView.ref.current : undefined;\n\n          _this14.transitionView(enteringEl, leavingEl, enteringViewStack.routerOutlet, direction);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.listenUnregisterCallback();\n    }\n  }, {\n    key: \"setupIonRouter\",\n    value: function setupIonRouter(id, children, routerOutlet) {\n      var _this15 = this;\n\n      var views = [];\n      var activeId;\n      React.Children.forEach(children, function (child) {\n        if (child.type === reactRouterDom.Switch) {\n          /**\n           * If the first child is a Switch, loop through its children to build the viewStack\n           */\n          React.Children.forEach(child.props.children, function (grandChild) {\n            addView.call(_this15, grandChild);\n          });\n        } else {\n          addView.call(_this15, child);\n        }\n      });\n      this.registerViewStack(id, activeId, views, routerOutlet, this.props.location);\n\n      function addView(child) {\n        var location = this.props.history.location;\n        var viewId = generateUniqueId();\n        var key = generateUniqueId();\n        var element = child;\n        var match = reactRouterDom.matchPath(location.pathname, child.props);\n        var view = {\n          id: viewId,\n          key: key,\n          routeData: {\n            match: match,\n            childProps: child.props\n          },\n          element: element,\n          mount: true,\n          show: !!match,\n          ref: React.createRef()\n        };\n\n        if (!!match) {\n          activeId = viewId;\n        }\n\n        views.push(view);\n        return activeId;\n      }\n    }\n  }, {\n    key: \"registerViewStack\",\n    value: function registerViewStack(stack, activeId, stackItems, routerOutlet, location) {\n      var _this16 = this;\n\n      this.setState(function (prevState) {\n        var prevViewStacks = Object.assign({}, prevState.viewStacks);\n        prevViewStacks[stack] = {\n          activeId: activeId,\n          views: stackItems,\n          routerOutlet: routerOutlet\n        };\n        return {\n          viewStacks: prevViewStacks\n        };\n      }, function () {\n        var _this16$findViewInfoB = _this16.findViewInfoById(activeId, _this16.state.viewStacks),\n            activeView = _this16$findViewInfoB.view;\n\n        if (activeView) {\n          _this16.prevViewId = _this16.activeViewId;\n          _this16.activeViewId = activeView.id;\n          var direction = location.state && location.state.direction;\n\n          var _this16$findViewInfoB2 = _this16.findViewInfoById(_this16.prevViewId, _this16.state.viewStacks),\n              prevView = _this16$findViewInfoB2.view;\n\n          _this16.transitionView(activeView.ref.current, prevView && prevView.ref.current || undefined, routerOutlet, direction);\n        }\n      });\n    }\n  }, {\n    key: \"removeViewStack\",\n    value: function removeViewStack(stack) {\n      var viewStacks = Object.assign({}, this.state.viewStacks);\n      delete viewStacks[stack];\n      this.setState({\n        viewStacks: viewStacks\n      });\n    }\n  }, {\n    key: \"renderChild\",\n    value: function renderChild(item) {\n      var component = React.cloneElement(item.element, {\n        computedMatch: item.routeData.match\n      });\n      return component;\n    }\n  }, {\n    key: \"findActiveView\",\n    value: function findActiveView(views) {\n      var _this17 = this;\n\n      var view;\n      views.some(function (x) {\n        var match = reactRouterDom.matchPath(_this17.props.location.pathname, x.routeData.childProps);\n\n        if (match) {\n          view = x;\n          return true;\n        }\n\n        return false;\n      });\n      return view;\n    }\n  }, {\n    key: \"transitionView\",\n    value: function transitionView(enteringEl, leavingEl, ionRouterOuter, direction) {\n      var _this18 = this;\n\n      /**\n       * Super hacky workaround to make sure ionRouterOutlet is available\n       * since transitionView might be called before IonRouterOutlet is fully mounted\n       */\n      if (ionRouterOuter && ionRouterOuter.componentOnReady) {\n        this.commitView(enteringEl, leavingEl, ionRouterOuter, direction);\n      } else {\n        setTimeout(function () {\n          _this18.transitionView(enteringEl, leavingEl, ionRouterOuter, direction);\n        }, 10);\n      }\n    }\n  }, {\n    key: \"commitView\",\n    value: function () {\n      var _commitView = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(enteringEl, leavingEl, ionRouterOuter, direction) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return ionRouterOuter.componentOnReady();\n\n              case 2:\n                _context6.next = 4;\n                return ionRouterOuter.commit(enteringEl, leavingEl, {\n                  deepWait: true,\n                  duration: direction === undefined ? 0 : undefined,\n                  direction: direction,\n                  showGoBack: direction === 'forward',\n                  progressAnimation: false\n                });\n\n              case 4:\n                if (leavingEl && enteringEl !== leavingEl) {\n                  /**\n                   *  add hidden attributes\n                  */\n                  leavingEl.classList.add('ion-page-hidden');\n                  leavingEl.setAttribute('aria-hidden', 'true');\n                }\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function commitView(_x5, _x6, _x7, _x8) {\n        return _commitView.apply(this, arguments);\n      }\n\n      return commitView;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavContext.Provider, {\n        value: this.state\n      }, this.props.children);\n    }\n  }]);\n\n  return IonNavManager;\n}(React.Component);\n\nvar IonNavManagerWithRouter = reactRouterDom.withRouter(IonNavManager);\nIonNavManagerWithRouter.displayName = 'IonNavManager';\n\nvar IonReactRouter =\n/*#__PURE__*/\nfunction (_React$Component13) {\n  _inherits(IonReactRouter, _React$Component13);\n\n  function IonReactRouter() {\n    _classCallCheck(this, IonReactRouter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IonReactRouter).apply(this, arguments));\n  }\n\n  _createClass(IonReactRouter, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          props = tslib_1.__rest(_a, [\"children\"]);\n\n      return React.createElement(reactRouterDom.BrowserRouter, Object.assign({}, props), React.createElement(IonNavManagerWithRouter, null, children));\n    }\n  }]);\n\n  return IonReactRouter;\n}(React.Component);\n\nloader.defineCustomElements(window); // Icons that are used by internal components\n\nionicons.addIcons({\n  'ios-close': icons.close.ios,\n  'md-close': icons.close.md,\n  'ios-reorder': icons.reorder.ios,\n  'md-reorder': icons.reorder.md,\n  'ios-menu': icons.menu.ios,\n  'md-menu': icons.menu.md,\n  'ios-arrow-forward': icons.arrowForward.ios,\n  'md-arrow-forward': icons.arrowForward.md,\n  'ios-arrow-back': icons.arrowBack.ios,\n  'md-arrow-back': icons.arrowBack.md,\n  'ios-arrow-down': icons.arrowDown.ios,\n  'md-arrow-down': icons.arrowDown.md,\n  'ios-search': icons.search.ios,\n  'md-search': icons.search.md,\n  'ios-close-circle': icons.closeCircle.ios,\n  'md-close-circle': icons.closeCircle.md\n});\nexports.IonActionSheet = IonActionSheet;\nexports.IonAlert = IonAlert;\nexports.IonAnchor = IonAnchor;\nexports.IonApp = IonApp;\nexports.IonAppInner = IonAppInner;\nexports.IonAvatar = IonAvatar;\nexports.IonBackButton = IonBackButton;\nexports.IonBackButtonInner = IonBackButtonInner;\nexports.IonBackdrop = IonBackdrop;\nexports.IonBadge = IonBadge;\nexports.IonButton = IonButton;\nexports.IonButtons = IonButtons;\nexports.IonCard = IonCard;\nexports.IonCardContent = IonCardContent;\nexports.IonCardHeader = IonCardHeader;\nexports.IonCardSubtitle = IonCardSubtitle;\nexports.IonCardTitle = IonCardTitle;\nexports.IonCheckbox = IonCheckbox;\nexports.IonChip = IonChip;\nexports.IonCol = IonCol;\nexports.IonContent = IonContent;\nexports.IonDatetime = IonDatetime;\nexports.IonFab = IonFab;\nexports.IonFabButton = IonFabButton;\nexports.IonFabList = IonFabList;\nexports.IonFooter = IonFooter;\nexports.IonGrid = IonGrid;\nexports.IonHeader = IonHeader;\nexports.IonIcon = IonIcon;\nexports.IonImg = IonImg;\nexports.IonInfiniteScroll = IonInfiniteScroll;\nexports.IonInput = IonInput;\nexports.IonItem = IonItem;\nexports.IonItemDivider = IonItemDivider;\nexports.IonItemGroup = IonItemGroup;\nexports.IonItemOption = IonItemOption;\nexports.IonItemOptions = IonItemOptions;\nexports.IonItemSliding = IonItemSliding;\nexports.IonLabel = IonLabel;\nexports.IonLifeCycleContext = IonLifeCycleContext;\nexports.IonList = IonList;\nexports.IonListHeader = IonListHeader;\nexports.IonLoading = IonLoading;\nexports.IonMenu = IonMenu;\nexports.IonMenuButton = IonMenuButton;\nexports.IonMenuToggle = IonMenuToggle;\nexports.IonModal = IonModal;\nexports.IonNav = IonNav;\nexports.IonNote = IonNote;\nexports.IonPage = IonPage;\nexports.IonPicker = IonPicker;\nexports.IonPickerColumn = IonPickerColumn;\nexports.IonPopover = IonPopover;\nexports.IonProgressBar = IonProgressBar;\nexports.IonRadio = IonRadio;\nexports.IonRadioGroup = IonRadioGroup;\nexports.IonRange = IonRange;\nexports.IonReactRouter = IonReactRouter;\nexports.IonRefresher = IonRefresher;\nexports.IonRefresherContent = IonRefresherContent;\nexports.IonReorder = IonReorder;\nexports.IonReorderGroup = IonReorderGroup;\nexports.IonRippleEffect = IonRippleEffect;\nexports.IonRouterOutlet = IonRouterOutlet;\nexports.IonRouterOutletInner = IonRouterOutletInner;\nexports.IonRow = IonRow;\nexports.IonSearchbar = IonSearchbar;\nexports.IonSegment = IonSegment;\nexports.IonSegmentButton = IonSegmentButton;\nexports.IonSelect = IonSelect;\nexports.IonSelectOption = IonSelectOption;\nexports.IonSelectPopover = IonSelectPopover;\nexports.IonSkeletonText = IonSkeletonText;\nexports.IonSlide = IonSlide;\nexports.IonSlides = IonSlides;\nexports.IonSpinner = IonSpinner;\nexports.IonSplitPane = IonSplitPane;\nexports.IonTab = IonTab;\nexports.IonTabBar = IonTabBar;\nexports.IonTabBarInner = IonTabBarInner;\nexports.IonTabButton = IonTabButton;\nexports.IonTabs = IonTabs;\nexports.IonText = IonText;\nexports.IonTextarea = IonTextarea;\nexports.IonThumbnail = IonThumbnail;\nexports.IonTitle = IonTitle;\nexports.IonToast = IonToast;\nexports.IonToggle = IonToggle;\nexports.IonToolbar = IonToolbar;\nexports.IonVirtualScroll = IonVirtualScroll;\nexports.IonicContext = IonicContext;\nexports.useIonViewDidEnter = useIonViewDidEnter;\nexports.useIonViewDidLeave = useIonViewDidLeave;\nexports.useIonViewWillEnter = useIonViewWillEnter;\nexports.useIonViewWillLeave = useIonViewWillLeave;\nexports.useIonicConfig = useIonicConfig;\nexports.withIonLifeCycle = withIonLifeCycle;","map":null,"metadata":{},"sourceType":"script"}