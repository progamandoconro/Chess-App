{"ast":null,"code":"import _objectSpread from \"/home/sony/WebAdmin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBzkakvvykR5oqjVj1EvtOY2WUN877v38s\",\n  authDomain: \"webtest-a81dc.firebaseapp.com\",\n  databaseURL: \"https://webtest-a81dc.firebaseio.com\",\n  projectId: \"webtest-a81dc\",\n  storageBucket: \"webtest-a81dc.appspot.com\",\n  messagingSenderId: \"180737000927\",\n  appId: \"1:180737000927:web:3d1df2cd0b631a2601b06a\",\n  measurementId: \"G-9CB63L546Y\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const authCheck = async _handleAuthedUser => {\n  return new Promise(resolve => {\n    // Listen for authentication state to change.\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user != null) {\n        console.log(\"We are authenticated now!\");\n        return resolve((await _handleAuthedUser(user)));\n      } else {\n        console.log(\"We did not authenticate.\");\n\n        _handleAuthedUser(null);\n\n        return resolve(null);\n      }\n    });\n  });\n};\n/**\n *\n * @param {*} email\n * @param {*} password\n */\n\nexport const loginWithEmail = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n};\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n/**\n *\n */\n\nexport const logOut = () => {\n  return firebase.auth().signOut();\n};\n/**\n *\n * @param {*} userInfo.lastName\n * @param {*} userInfo.firstName\n * @param {*} userInfo.email\n * @param {*} userInfo.password\n */\n\nexport const registerUser = userInfo => {\n  console.log(\"in registerUser\");\n  return firebase.auth().createUserWithEmailAndPassword(userInfo.email, userInfo.password).then(newUser => {\n    let email = userInfo.email,\n        firstName = userInfo.firstName,\n        lastName = userInfo.lastName;\n    return firebase.firestore().collection(\"users\").doc(newUser.user.uid).set({\n      email,\n      firstName,\n      lastName\n    }).then(() => {\n      return _objectSpread({}, newUser, {\n        firstName,\n        lastName\n      });\n    });\n  });\n};\n/**\n *\n */\n\nexport const getUserProfile = () => {\n  let user = firebase.auth().currentUser;\n  console.log(user);\n  var userRef = firebase.firestore().collection(\"users\").doc(user.uid);\n  return userRef.get().then(doc => {\n    if (doc.exists) {\n      console.log(\"Document data:\", doc.data());\n      return _objectSpread({}, doc.data(), {\n        id: user.uid\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\", user.uid);\n      return null;\n    }\n  }).catch(error => {\n    console.log(\"Error getting document:\", error);\n  });\n};\n/**\n *\n * @param {*} param0\n */\n\nexport const queryObjectCollection = ({\n  collection\n}) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n  let results = [];\n  return collectionRef //.where('owner', '==', currentUserId)\n  .get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      results.push(_objectSpread({\n        id: doc.id\n      }, doc.data()));\n    });\n    return results;\n  }).catch(error => {\n    console.log(\"Error getting documents: \", error);\n    return error;\n  });\n};\n/**\n *\n * @param {*} _collection - name of collection to add object to\n * @param {*} _objectData - data to add to the collection\n */\n\nexport const addObjectToCollection = ({\n  collection,\n  objectData\n}) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n  return collectionRef.add({\n    owner: currentUserId,\n    content: _objectSpread({}, objectData),\n    created: new Date().getTime(),\n    updated: new Date().getTime()\n  }).then(async doc => {\n    console.log(\"addObjectToCollection \".concat(collection, \" \").concat(doc));\n    let docData = await getByRef(doc);\n    return docData;\n  }, error => {\n    console.log(\"ERROR: addObjectToCollection \".concat(collection, \" \").concat(error));\n    return error;\n  }).catch(e => {\n    console.log(\"ERROR: addObjectToCollection \".concat(collection, \" \").concat(e));\n    return e;\n  });\n};\n/**\n *\n * @param {*} collection - name of collection \n * @param {*} objectId - id of data to remove from the collection\n */\n\nexport const removeObjectFromCollection = ({\n  collection,\n  objectId\n}) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n  return collectionRef.doc(objectId).delete().then(async doc => {\n    console.log(\"removeObjectFromCollection \".concat(collection, \" \").concat(objectId));\n    return true;\n  }, error => {\n    console.log(\"ERROR: removeObjectFromCollection \".concat(collection, \" \").concat(error));\n    return error;\n  }).catch(e => {\n    console.log(\"ERROR: removeObjectFromCollection \".concat(collection, \" \").concat(e));\n    return e;\n  });\n};\nexport const getByRef = _documentRef => {\n  return _documentRef.get().then(doc => {\n    if (doc.exists) {\n      return _objectSpread({}, doc.data(), {\n        id: _documentRef.id\n      });\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n      return null;\n    }\n  }).catch(error => {\n    console.log(\"Error getting document:\", error);\n    return error;\n  });\n};\n/**\n *\n * @param {*} blob\n */\n\nexport const uploadImage = blob => {\n  return new Promise((resolve, reject) => {\n    let currentUserId = firebase.auth().currentUser.uid;\n    const ref = firebase.storage().ref(currentUserId).child(new Date().getTime() + \"-\" + currentUserId + \".jpeg\");\n    const task = ref.put(blob);\n    task.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => console.log(snapshot.bytesTransferred / snapshot.totalBytes * 100), error => {\n      console.log(\"error\", error);\n      return reject(error);\n    }, result => {\n      return resolve({\n        url: task.snapshot.downloadURL,\n        contentType: task.snapshot.metadata.contentType,\n        name: task.snapshot.metadata.name,\n        size: task.snapshot.metadata.size\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/home/sony/WebAdmin/src/store/firebaseService.js"],"names":["firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","authCheck","_handleAuthedUser","Promise","resolve","auth","onAuthStateChanged","user","console","log","loginWithEmail","email","password","signInWithEmailAndPassword","getCurrentUser","currentUser","logOut","signOut","registerUser","userInfo","createUserWithEmailAndPassword","then","newUser","firstName","lastName","firestore","collection","doc","uid","set","getUserProfile","userRef","get","exists","data","id","catch","error","queryObjectCollection","currentUserId","collectionRef","results","querySnapshot","forEach","push","addObjectToCollection","objectData","add","owner","content","created","Date","getTime","updated","docData","getByRef","e","removeObjectFromCollection","objectId","delete","_documentRef","uploadImage","blob","reject","ref","storage","child","task","put","on","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","result","url","downloadURL","contentType","metadata","name","size"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\"\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n\n  apiKey: \"AIzaSyBzkakvvykR5oqjVj1EvtOY2WUN877v38s\",\n    authDomain: \"webtest-a81dc.firebaseapp.com\",\n    databaseURL: \"https://webtest-a81dc.firebaseio.com\",\n    projectId: \"webtest-a81dc\",\n    storageBucket: \"webtest-a81dc.appspot.com\",\n    messagingSenderId: \"180737000927\",\n    appId: \"1:180737000927:web:3d1df2cd0b631a2601b06a\",\n    measurementId: \"G-9CB63L546Y\"\n\n\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const authCheck = async _handleAuthedUser => {\n  return new Promise(resolve => {\n    // Listen for authentication state to change.\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user != null) {\n        console.log(\"We are authenticated now!\");\n\n        return resolve(await _handleAuthedUser(user));\n      } else {\n        console.log(\"We did not authenticate.\");\n        _handleAuthedUser(null);\n        return resolve(null);\n      }\n    });\n  });\n};\n\n/**\n *\n * @param {*} email\n * @param {*} password\n */\nexport const loginWithEmail = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n};\n\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n/**\n *\n */\nexport const logOut = () => {\n  return firebase.auth().signOut();\n};\n\n/**\n *\n * @param {*} userInfo.lastName\n * @param {*} userInfo.firstName\n * @param {*} userInfo.email\n * @param {*} userInfo.password\n */\nexport const registerUser = userInfo => {\n  console.log(\"in registerUser\");\n  return firebase\n    .auth()\n    .createUserWithEmailAndPassword(userInfo.email, userInfo.password)\n    .then(newUser => {\n      let { email, firstName, lastName } = userInfo;\n\n      return firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(newUser.user.uid)\n        .set({\n          email,\n          firstName,\n          lastName\n        })\n        .then(() => {\n          return { ...newUser, firstName, lastName };\n        });\n    });\n};\n\n/**\n *\n */\nexport const getUserProfile = () => {\n  let user = firebase.auth().currentUser;\n  console.log(user);\n\n  var userRef = firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(user.uid);\n\n  return userRef\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n        return {\n          ...doc.data(),\n          id: user.uid\n        };\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\", user.uid);\n        return null;\n      }\n    })\n    .catch(error => {\n      console.log(\"Error getting document:\", error);\n    });\n};\n\n/**\n *\n * @param {*} param0\n */\nexport const queryObjectCollection = ({ collection }) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n\n  let results = [];\n\n  return (\n    collectionRef\n      //.where('owner', '==', currentUserId)\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          results.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        return results;\n      })\n      .catch(error => {\n        console.log(\"Error getting documents: \", error);\n        return error;\n      })\n  );\n};\n\n/**\n *\n * @param {*} _collection - name of collection to add object to\n * @param {*} _objectData - data to add to the collection\n */\nexport const addObjectToCollection = ({ collection, objectData }) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n\n  return collectionRef\n    .add({\n      owner: currentUserId,\n      content: { ...objectData },\n      created: new Date().getTime(),\n      updated: new Date().getTime()\n    })\n    .then(\n      async doc => {\n        console.log(`addObjectToCollection ${collection} ${doc}`);\n\n        let docData = await getByRef(doc);\n        return docData;\n      },\n      error => {\n        console.log(`ERROR: addObjectToCollection ${collection} ${error}`);\n        return error;\n      }\n    )\n    .catch(e => {\n      console.log(`ERROR: addObjectToCollection ${collection} ${e}`);\n      return e;\n    });\n};\n\n\n/**\n *\n * @param {*} collection - name of collection \n * @param {*} objectId - id of data to remove from the collection\n */\nexport const removeObjectFromCollection = ({ collection, objectId }) => {\n  let currentUserId = firebase.auth().currentUser.uid;\n  let collectionRef = firebase.firestore().collection(collection);\n\n  return collectionRef.doc(objectId).delete()\n    .then(\n      async doc => {\n        console.log(`removeObjectFromCollection ${collection} ${objectId}`);\n        return true;\n      },\n      error => {\n        console.log(`ERROR: removeObjectFromCollection ${collection} ${error}`);\n        return error;\n      }\n    )\n    .catch(e => {\n      console.log(`ERROR: removeObjectFromCollection ${collection} ${e}`);\n      return e;\n    });\n};\n\n\nexport const getByRef = _documentRef => {\n  return _documentRef\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        return { ...doc.data(), id: _documentRef.id };\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        return null;\n      }\n    })\n    .catch(error => {\n      console.log(\"Error getting document:\", error);\n      return error;\n    });\n};\n\n/**\n *\n * @param {*} blob\n */\nexport const uploadImage = blob => {\n  return new Promise((resolve, reject) => {\n    let currentUserId = firebase.auth().currentUser.uid;\n    const ref = firebase\n      .storage()\n      .ref(currentUserId)\n      .child(new Date().getTime() + \"-\" + currentUserId + \".jpeg\");\n\n    const task = ref.put(blob);\n\n    task.on(\n      firebase.storage.TaskEvent.STATE_CHANGED,\n      snapshot =>\n        console.log((snapshot.bytesTransferred / snapshot.totalBytes) * 100),\n      error => {\n        console.log(\"error\", error);\n        return reject(error);\n      },\n      result => {\n        return resolve({\n          url: task.snapshot.downloadURL,\n          contentType: task.snapshot.metadata.contentType,\n          name: task.snapshot.metadata.name,\n          size: task.snapshot.metadata.size\n        });\n      }\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}