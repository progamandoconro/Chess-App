{"ast":null,"code":"var shadow = function shadow(el) {\n  return el.shadowRoot || el;\n};\n\nvar iosTransitionAnimation = function iosTransitionAnimation(AnimationC, navEl, opts) {\n  var DURATION = 540;\n  var EASING = 'cubic-bezier(0.32,0.72,0,1)';\n  var OPACITY = 'opacity';\n  var TRANSFORM = 'transform';\n  var TRANSLATEX = 'translateX';\n  var CENTER = '0%';\n  var OFF_OPACITY = 0.8;\n  var backDirection = opts.direction === 'back';\n  var isRTL = navEl.ownerDocument.dir === 'rtl';\n  var OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\n  var OFF_LEFT = isRTL ? '33%' : '-33%';\n  var enteringEl = opts.enteringEl;\n  var leavingEl = opts.leavingEl;\n  var contentEl = enteringEl.querySelector(':scope > ion-content');\n  var headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n  var enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n  var enteringContent = new AnimationC();\n  var rootTransition = new AnimationC();\n  rootTransition.addElement(enteringEl).duration(opts.duration || DURATION).easing(opts.easing || EASING).beforeRemoveClass('ion-page-invisible');\n\n  if (leavingEl && navEl) {\n    var navDecor = new AnimationC();\n    navDecor.addElement(navEl);\n    rootTransition.add(navDecor);\n  }\n\n  if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\n    enteringContent.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs'));\n  } else {\n    enteringContent.addElement(contentEl).addElement(headerEls);\n  }\n\n  rootTransition.add(enteringContent);\n\n  if (backDirection) {\n    enteringContent.beforeClearStyles([OPACITY]).fromTo(TRANSLATEX, OFF_LEFT, CENTER, true).fromTo(OPACITY, OFF_OPACITY, 1, true);\n  } else {\n    // entering content, forward direction\n    enteringContent.beforeClearStyles([OPACITY]).fromTo(TRANSLATEX, OFF_RIGHT, CENTER, true);\n\n    if (contentEl) {\n      var enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\n\n      if (enteringTransitionEffectEl) {\n        var enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\n        var enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\n        var enteringTransitionEffect = new AnimationC();\n        var enteringTransitionCover = new AnimationC();\n        var enteringTransitionShadow = new AnimationC();\n        enteringTransitionEffect.addElement(enteringTransitionEffectEl).beforeStyles({\n          opacity: '1'\n        }).afterStyles({\n          opacity: ''\n        });\n        enteringTransitionCover.addElement(enteringTransitionCoverEl).beforeClearStyles([OPACITY]).fromTo(OPACITY, 0, 0.1, true);\n        enteringTransitionShadow.addElement(enteringTransitionShadowEl).beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.70, 0.03, true);\n        enteringContent.add(enteringTransitionEffect).add(enteringTransitionCover).add(enteringTransitionShadow);\n      }\n    }\n  }\n\n  enteringToolBarEls.forEach(function (enteringToolBarEl) {\n    var enteringToolBar = new AnimationC();\n    var enteringTitle = new AnimationC();\n    var enteringToolBarButtons = new AnimationC();\n    var enteringToolBarItems = new AnimationC();\n    var enteringToolBarBg = new AnimationC();\n    var enteringBackButton = new AnimationC();\n    var backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\n    enteringToolBar.addElement(enteringToolBarEl);\n    rootTransition.add(enteringToolBar);\n    enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title'));\n    enteringToolBarButtons.addElement(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n    enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\n    enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background'));\n\n    if (backButtonEl) {\n      enteringBackButton.addElement(backButtonEl);\n    }\n\n    enteringToolBar.add(enteringTitle).add(enteringToolBarButtons).add(enteringToolBarItems).add(enteringToolBarBg).add(enteringBackButton);\n    enteringTitle.fromTo(OPACITY, 0.01, 1, true);\n    enteringToolBarButtons.fromTo(OPACITY, 0.01, 1, true);\n    enteringToolBarItems.fromTo(OPACITY, 0.01, 1, true);\n\n    if (backDirection) {\n      enteringTitle.fromTo(TRANSLATEX, OFF_LEFT, CENTER, true);\n      enteringToolBarItems.fromTo(TRANSLATEX, OFF_LEFT, CENTER, true); // back direction, entering page has a back button\n\n      enteringBackButton.fromTo(OPACITY, 0.01, 1, true);\n    } else {\n      // entering toolbar, forward direction\n      enteringTitle.fromTo(TRANSLATEX, OFF_RIGHT, CENTER, true);\n      enteringToolBarItems.fromTo(TRANSLATEX, OFF_RIGHT, CENTER, true);\n      enteringToolBarBg.beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.01, 1, true); // forward direction, entering page has a back button\n\n      enteringBackButton.fromTo(OPACITY, 0.01, 1, true);\n\n      if (backButtonEl) {\n        var enteringBackBtnText = new AnimationC();\n        enteringBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text')).fromTo(TRANSLATEX, isRTL ? '-100px' : '100px', '0px');\n        enteringToolBar.add(enteringBackBtnText);\n      }\n    }\n  }); // setup leaving view\n\n  if (leavingEl) {\n    var leavingContent = new AnimationC();\n    var leavingContentEl = leavingEl.querySelector(':scope > ion-content');\n    leavingContent.addElement(leavingContentEl).addElement(leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *'));\n    rootTransition.add(leavingContent);\n\n    if (backDirection) {\n      // leaving content, back direction\n      leavingContent.beforeClearStyles([OPACITY]).fromTo(TRANSLATEX, CENTER, isRTL ? '-100%' : '100%');\n\n      if (leavingContentEl) {\n        var leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\n\n        if (leavingTransitionEffectEl) {\n          var leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\n          var leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\n          var leavingTransitionEffect = new AnimationC();\n          var leavingTransitionCover = new AnimationC();\n          var leavingTransitionShadow = new AnimationC();\n          leavingTransitionEffect.addElement(leavingTransitionEffectEl).beforeStyles({\n            opacity: '1'\n          }).afterStyles({\n            opacity: ''\n          });\n          leavingTransitionCover.addElement(leavingTransitionCoverEl).beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.1, 0, true);\n          leavingTransitionShadow.addElement(leavingTransitionShadowEl).beforeClearStyles([OPACITY]).fromTo(OPACITY, 0.70, 0.03, true);\n          leavingContent.add(leavingTransitionEffect).add(leavingTransitionCover).add(leavingTransitionShadow);\n        }\n      }\n    } else {\n      // leaving content, forward direction\n      leavingContent.fromTo(TRANSLATEX, CENTER, OFF_LEFT, true).fromTo(OPACITY, 1, OFF_OPACITY, true);\n    }\n\n    var leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n    leavingToolBarEls.forEach(function (leavingToolBarEl) {\n      var leavingToolBar = new AnimationC();\n      var leavingTitle = new AnimationC();\n      var leavingToolBarButtons = new AnimationC();\n      var leavingToolBarItems = new AnimationC();\n      var leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\n      var leavingToolBarBg = new AnimationC();\n      var leavingBackButton = new AnimationC();\n      var backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\n      leavingToolBar.addElement(leavingToolBarEl);\n      leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title'));\n      leavingToolBarButtons.addElement(leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n\n      if (leavingToolBarItemEls.length > 0) {\n        leavingToolBarItems.addElement(leavingToolBarItemEls);\n      }\n\n      leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background'));\n\n      if (backButtonEl) {\n        leavingBackButton.addElement(backButtonEl);\n      }\n\n      leavingToolBar.add(leavingTitle).add(leavingToolBarButtons).add(leavingToolBarItems).add(leavingBackButton).add(leavingToolBarBg);\n      rootTransition.add(leavingToolBar); // fade out leaving toolbar items\n\n      leavingBackButton.fromTo(OPACITY, 0.99, 0);\n      leavingTitle.fromTo(OPACITY, 0.99, 0);\n      leavingToolBarButtons.fromTo(OPACITY, 0.99, 0, 0);\n      leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\n\n      if (backDirection) {\n        // leaving toolbar, back direction\n        leavingTitle.fromTo(TRANSLATEX, CENTER, isRTL ? '-100%' : '100%');\n        leavingToolBarItems.fromTo(TRANSLATEX, CENTER, isRTL ? '-100%' : '100%'); // leaving toolbar, back direction, and there's no entering toolbar\n        // should just slide out, no fading out\n\n        leavingToolBarBg.beforeClearStyles([OPACITY]).fromTo(OPACITY, 1, 0.01);\n\n        if (backButtonEl) {\n          var leavingBackBtnText = new AnimationC();\n          leavingBackBtnText.addElement(shadow(backButtonEl).querySelector('.button-text'));\n          leavingBackBtnText.fromTo(TRANSLATEX, CENTER, (isRTL ? -124 : 124) + 'px');\n          leavingToolBar.add(leavingBackBtnText);\n        }\n      } else {\n        // leaving toolbar, forward direction\n        leavingTitle.fromTo(TRANSLATEX, CENTER, OFF_LEFT).afterClearStyles([TRANSFORM]);\n        leavingToolBarItems.fromTo(TRANSLATEX, CENTER, OFF_LEFT).afterClearStyles([TRANSFORM, OPACITY]);\n        leavingBackButton.afterClearStyles([OPACITY]);\n        leavingTitle.afterClearStyles([OPACITY]);\n        leavingToolBarButtons.afterClearStyles([OPACITY]);\n      }\n    });\n  } // Return the rootTransition promise\n\n\n  return Promise.resolve(rootTransition);\n};\n\nexport { iosTransitionAnimation, shadow };","map":null,"metadata":{},"sourceType":"module"}